{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeTimerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","clockName","props","debug","clearInterval","className","PureComponent","getRandomName","value","now","toString","App","hasClock","nameTimerId","handleContextMenu","event","preventDefault","handleClick","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIC,MAFf,EAKEC,YAAc,EALhB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,cAAcC,OAAO,IAAK,MACvD,OAZP,gCAeE,SAAmBC,GACbA,EAAUC,YAAcT,KAAKU,MAAMD,WAErCL,QAAQO,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDT,KAAKU,MAAMD,cAlBzE,kCAsBE,WACER,OAAOW,cAAcZ,KAAKD,eAvB9B,oBA0BE,WACE,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,YAGb,YAED,sBAAMI,UAAU,cAAhB,SACGb,KAAKJ,MAAMC,MAAMS,cAAcC,OAAO,IAAK,YApCtD,GAA2BO,iBCN3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,MAAe,CACbwB,UAAU,EACVX,UAAW,WAHf,EAMEY,YAAc,EANhB,EAiBEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEiB,UAAU,KAnB9B,EAsBEK,YAAc,WACZ,EAAKtB,SAAS,CAAEiB,UAAU,KAvB9B,uDAQE,WAA2B,IAAD,OACxBpB,KAAKqB,YAAcpB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEM,UAAWM,QAC1B,MAEHW,SAASC,iBAAiB,cAAe3B,KAAKsB,mBAC9CI,SAASC,iBAAiB,QAAS3B,KAAKyB,eAd5C,oBA0BE,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,6CAECb,KAAKJ,MAAMwB,UACV,cAAC,EAAD,CAAOX,UAAWT,KAAKJ,MAAMa,mBAhCvC,GAAyBK,iBCZzBc,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.41283f15.chunk.js","sourcesContent":["import { PureComponent } from 'react';\n\ninterface State {\n  today: Date,\n}\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends PureComponent<Props> {\n  state: State = {\n    today: new Date(),\n  };\n\n  timeTimerId = 0;\n\n  componentDidMount(): void {\n    this.timeTimerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timeTimerId);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { PureComponent } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  hasClock: boolean;\n  clockName: string;\n}\n\nexport class App extends PureComponent {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  nameTimerId = 0;\n\n  componentDidMount(): void {\n    this.nameTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleContextMenu);\n    document.addEventListener('click', this.handleClick);\n  }\n\n  handleContextMenu = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.hasClock && (\n          <Clock clockName={this.state.clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}